"""Add SEO fields to BlogPost

Revision ID: 25c9649869fa
Revises: 
Create Date: 2025-09-29 12:57:50.982323

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '25c9649869fa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('blog')
    with op.batch_alter_table('blog_post', schema=None) as batch_op:
        batch_op.add_column(sa.Column('seo_title', sa.String(length=70), nullable=True))
        batch_op.add_column(sa.Column('meta_description', sa.String(length=160), nullable=True))
        batch_op.add_column(sa.Column('keywords', sa.String(length=300), nullable=True))
        batch_op.add_column(sa.Column('slug', sa.String(length=200), nullable=True))
        batch_op.create_unique_constraint(None, ['slug'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('blog_post', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('slug')
        batch_op.drop_column('keywords')
        batch_op.drop_column('meta_description')
        batch_op.drop_column('seo_title')

    op.create_table('blog',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.VARCHAR(length=300), autoincrement=False, nullable=True),
    sa.Column('author', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('blog_pkey')),
    sa.UniqueConstraint('slug', name=op.f('blog_slug_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
