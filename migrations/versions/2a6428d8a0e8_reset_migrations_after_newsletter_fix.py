"""Reset migrations after newsletter fix

Revision ID: 2a6428d8a0e8
Revises: 
Create Date: 2025-10-01 17:29:07.200723

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2a6428d8a0e8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('newsletter', schema=None) as batch_op:
        batch_op.add_column(sa.Column('token', sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column('confirmed', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['token'])
        batch_op.drop_column('subscribed_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('newsletter', schema=None) as batch_op:
        batch_op.add_column(sa.Column('subscribed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.drop_column('created_at')
        batch_op.drop_column('confirmed')
        batch_op.drop_column('token')

    # ### end Alembic commands ###
